@layout EmptyLayout
@page "/zalogujV2"
@page "/signinV2"
@page "/loginV2"

@inject ISignInViewModel SignInVM
@*note: for that moment cant use _signInManager.PasswordSignInAsync using SignalR - use it when changed; The Blazor roadmap suggest this might be fixed in version 5.0.0, but for now you need to develop a solution based on the mixin. I have done this by using the scaffold and setting up navigation between Blazor components and Identity scaffolded items (SignIn and Signout processes). It works great and is the optimal solution for now. *@

<link href="css/login.css" rel="stylesheet" />

<div class="text-center">
    <main class="form-signin">
        <form>
            <img class="mb-4" src="../assets/brand/bootstrap-logo.svg" alt="" width="72" height="57">
            <h1 class="h3 mb-3 fw-normal">Please sign in</h1>

            <div class="form-floating">
                <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">
                <label for="floatingInput">Email address</label>
            </div>
            <div class="form-floating">
                <input type="password" class="form-control" id="floatingPassword" placeholder="Password">
                <label for="floatingPassword">Password</label>
            </div>

            <div class="checkbox mb-3">
                <label>
                    <input type="checkbox" value="remember-me"> Remember me
                </label>
            </div>
            <button class="w-100 btn btn-lg btn-primary" type="submit">Sign in</button>
            <p class="mt-5 mb-3 text-muted">&copy; 2017–2021</p>
        </form>
    </main>
</div>

<h1>JP TEST</h1>

<EditForm Model="@SignInVM.Input" OnValidSubmit="@SignInVM.SignIn">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-floating">
        <InputText type="email" class="form-control" placeholder="hack" @bind-Value="SignInVM.Input.Email" />
        <label>Email lub login</label>
    </div>

    <div class="form-floating">
        <InputText type="password" class="form-control" placeholder="hack" @bind-Value="SignInVM.Input.Password" />
        <label>Hasło</label>
    </div>

    <div class="form-check form-switch">
        <InputCheckbox class="form-check-input" id="flexSwitchCheckChecked" @bind-Value="SignInVM.Input.RememberMe" />
        <label class="form-check-label" for="flexSwitchCheckChecked">Zapamiętaj mnie</label>
    </div>

    <button type="submit" class="btn btn-secondary btn-sm">Zaloguj</button>
</EditForm>


@code {

}