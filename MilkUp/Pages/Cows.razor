@page "/cows"
@page "/cows/{SelectedCowID:int}"
@page "/cows/{SelectedCowID:int}/{LactationID:int}"
@page "/cows/{SomeTxtParam}"
@page "/krowy"

@using System.Collections.Generic
@inject ICowsViewModel CowsVM


<h1>MVVM</h1>
@if (CowsVM.AddCowFormViewModel == null)
 {
    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        <button type="button " class="btn btn-secondary btn-sm" @onclick="CowsVM.InitializeNewCowForm">Dodaj</button>
    </div>
 }
@if (CowsVM.AddCowFormViewModel != null)
 {
     <div class="alert alert-secondary mt-4" role="alert">
        <h1>Dodaj krowe</h1>
        <EditForm Model="@CowsVM.AddCowFormViewModel" OnValidSubmit="@CowsVM.AddNewCow">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-check form-switch">
                @*<input class="form-check-input" type="checkbox" id="flexSwitchCheckChecked" checked>*@
                <InputCheckbox class="form-check-input" id="flexSwitchCheckChecked" @bind-Value="CowsVM.AddCowFormViewModel.IsFarmBorn" />
                <label class="form-check-label" for="flexSwitchCheckChecked">Dodaj jako ciele</label>
            </div>

            <div class="form-floating">
                <InputNumber type="number" class="form-control" placeholder="hack" @bind-Value="CowsVM.AddCowFormViewModel.NameOnFarm" />
                <label>ID</label>
            </div>

            <div class="form-floating">
                <InputNumber type="number" class="form-control" placeholder="hack" @bind-Value="CowsVM.AddCowFormViewModel.EarringNumber" />
                <label>Numer kolczyka</label>
            </div>

            <div class="form-floating">
                <InputNumber type="number" class="form-control" placeholder="hack" @bind-Value="CowsVM.AddCowFormViewModel.TransponderNumber" />
                <label>Numer transpordera</label>
            </div>

            
            <div class="form-floating">
                <InputSelect class="form-select" id="floatingSelect" aria-label="Floating label select example" @bind-Value="CowsVM.AddCowFormViewModel.FarmID">
                    <option value="">Wybierz farme</option>
                    @foreach (var farm in CowsVM.AddCowFormViewModel.Farms)
                        {
                        <option value="@farm.FarmID">@farm.FarmName</option>
                        }
                </InputSelect>
                <label for="floatingSelect">Farma</label>
            </div>

                <button type="submit" class="btn btn-secondary btn-sm">Zapisz</button>
                <button class="btn btn-secondary btn-sm" @onclick="CowsVM.CancelAddCowForm">Anuluj</button>
        </EditForm>         
    </div>
 }

@if (CowsVM.CowList == null)
 {
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
 }
@if (CowsVM.CowList != null)
{
    <table class="table table-hover table-sm">
      <thead>
        <tr>
          <th scope = "col" >ID</th>
          <th scope="col">Liczba laktacji</th>
          <th scope = "col" > ID zakładu </th>
          <th scope="col">ID rodzica</th>
        </tr>
      </thead>
      <tbody>
          @foreach (var cow in CowsVM.CowList)
          {
              <tr>
                  <th scope="row"> @cow.NameOnFarm </th>
                  <td> @cow.LactationCount </td>
                  <td> @cow.FarmID </td>
                  <td> @cow.ParentID </td>
              </tr>
          }

          
      </tbody>
    </table>

    @*paginacja*@
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-end pagination-sm">
            <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
            <li class="page-item active"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item"><a class="page-link" href="#">Next</a></li>
        </ul>
    </nav>
}

<h3>Cows</h3>

<select @onchange="ItemSelected" class="form-select" size="3" aria-label="size 3 select example">
    @foreach (var cow in CowList)
     {
       <option value="@cow.ID.ToString()">@cow.NameOnFarm</option>
     }
</select>

@if (SelectedCow != null)
    {
        <br />
        <div>
            Informacje szczegółowe:
            Oznaczenie na farmie: @SelectedCow.NameOnFarm
            Płeć: @(SelectedCow.IsMale ? "Samiec" : "Samica")
        </div>
    }


@code {
List<Cow> CowList;
Cow SelectedCow;

[Parameter]
public int? SelectedCowID { get; set; }

[Parameter]
public int? LactationID { get; set; } //todo

[Parameter]
public string SomeTxtParam { get; set; }

public class Cow
{
        public int ID { get; set; }//use by DB
        public int NameOnFarm { get; set; }//ID used on farm
        public int FarmID { get; set; }
        public int? ParentID { get; set; }

        public bool IsMale { get; set; }
}

void ItemSelected(ChangeEventArgs args)
        => SelectedCow = CowList.FirstOrDefault(x => x.ID.ToString() == args.Value.ToString());

public override Task SetParametersAsync(ParameterView parameters)
{
        //called as first method called when page load, before parameters are set, it happends each time we set params (not once like init)
        return base.SetParametersAsync(parameters);
}

protected override Task OnInitializedAsync()
{
        //called second, after parameters are set, only once when page is initialized

        CowList = new List<Cow>()
            {
            new Cow(){ ID = 1, FarmID = 1, NameOnFarm = 203, IsMale = false },
            new Cow(){ ID = 2, FarmID = 1, NameOnFarm = 204, IsMale = false, ParentID = 1},
            new Cow(){ ID = 3, FarmID = 1, NameOnFarm = 205, IsMale = false, ParentID = 1 }
        };

        @if (SelectedCowID != null)
            SelectedCow = CowList.FirstOrDefault(x => x.ID == SelectedCowID);

        return base.OnInitializedAsync();
}

protected override Task OnParametersSetAsync()
{
        //called each time when any of parameters is changes (set from other page or from same) - https://youtu.be/Rp-UDNLqZEc?t=1304
        return base.OnParametersSetAsync();
}

protected override Task OnAfterRenderAsync(bool firstRender)
{
        //called as last
        return base.OnAfterRenderAsync(firstRender);
}
}
